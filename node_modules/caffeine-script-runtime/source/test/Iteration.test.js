// Generated by CoffeeScript 1.12.7
(function() {
  var Caf, array123, defineModule, describe, log, ref, ref1, test;

  ref = require("art-standard-lib"), defineModule = ref.defineModule, log = ref.log;

  ref1 = require("art-testbench"), describe = ref1.describe, test = ref1.test;

  Caf = require("../../");

  array123 = [1, 2, 3];

  test("each", function() {
    return assert.eq([2, 4, 6], Caf.each(array123, [], function(cafV, cafK, cafInto) {
      return cafInto.push(cafV * 2);
    }));
  });

  test("each", function() {
    return assert.same(array123, Caf.each(array123, null, function() {}));
  });

  test("extendedEach is ee", function() {
    return assert.eq(Caf.extendedEach, Caf.ee);
  });

  test("extendedEach", function() {
    var b, out;
    b = [1, 2, 3];
    out = Caf.extendedEach(b, null, (function(_this) {
      return function(a, k, into, brk) {
        brk();
        return "shouldReturnThis";
      };
    })(this));
    return assert.eq(out, "shouldReturnThis");
  });

  test("caffeine: find a from b when a > 10", function() {
    var b, found;
    b = [1, 50, 2, 60];
    found = Caf.extendedEach(b, null, (function(_this) {
      return function(a, k, into, brk) {
        if (a > 10) {
          brk();
          return a;
        }
      };
    })(this));
    return assert.eq(found, 50);
  });

}).call(this);
